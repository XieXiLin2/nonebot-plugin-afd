[project]
name = "nonebot-plugin-afd"
version = "0.1.1"
description = "基于 NoneBot2 的爱发电订单审核进群插件"
authors = [{ name = "17TheWord", email = "17theword@gmail.com" }]
requires-python = ">=3.10, <4"
readme = "README.md"
license = "MIT"
dependencies = [
    "nonebot-adapter-onebot>=2.4.4,<3",
    "nonebot-adapter-afdian>=0.1.8,<0.2",
    "nonebot2[fastapi, httpx]>=2.3.3,<3",
    "nonebot-plugin-localstore>=0.7.4",
    "nonebot-plugin-alconna>=0.60.1",
]

[dependency-groups]
dev = ["nb-cli>=1.4.2,<2"]

test = [
    "nonebug>=0.4.3,<0.5",
    "pytest>=8.4.2",
    "pytest-cov>=6.2.1,<7",
    "pytest-asyncio>=1.1.0,<2",
]

lint = ["ruff>=0.12.4,<0.13", "pre-commit>=3.8.0,<4"]

[tool.nonebot]
adapters = [
    { name = "Afdian", module_name = "nonebot.adapters.afdian" },
    { name = "OneBot V11", module_name = "nonebot.adapters.onebot.v11" },
]
plugins = ["nonebot_plugin_afd"]
plugin_dirs = []
builtin_plugins = []

[tool.uv]
default-groups = ["dev", "test", "lint"]

[tool.hatch.build.targets.sdist]
include = ["nonebot_plugin_afd"]

[tool.hatch.build.targets.wheel]
include = ["nonebot_plugin_afd"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
addopts = "--cov=nonebot_plugin_afd --cov-report term-missing"

[tool.basedpyright]
pythonVersion = "3.10"
defineConstant = { PYDANTIC_V2 = true }
typeCheckingMode = "standard"
reportShadowedImports = false
exclude = ["**/node_modules", "**/.venv"]
executionEnvironments = [
    { root = "typings", reportIncompatibleMethodOverride = false, reportSelfClsParameterName = false },
    { root = "." },
]

[tool.ruff]
target-version = "py310"

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
ignore = [
    "B008",
    "B905",
    # "COM812",
    "E501",
    "F821",
    "FBT001",
    "FBT002",
    "ISC001",
    "PERF203",
    "PGH003",
    "PLC04",
    "PLC2701",
    "PLR09",
    "PLR1702",
    "PLR2004",
    "PLR6301",
    "PLW0603",
    "PLW1641",
    "PLW2901",
    "RUF001",
    "RUF002",
    "RUF003",
    "RUF006",
    "RUF029",
    "RUF100",
    "S101",
    "S311",
    "S404",
    "SIM117",
    "TC001",
    "TRY002",
    "TRY003",
    "W505",
]
select = [
    "A",
    "ANN001",
    "ARG",
    "ASYNC",
    "B",
    "C4",
    "COM",
    "DTZ",
    "E",
    "F",
    "FAST",
    "FBT",
    "FLY",
    "FURB",
    "I",
    "INP",
    "ISC",
    "N",
    "NPY",
    "PD",
    "PERF",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SIM",
    "SLF",
    "SLOT",
    "TC",
    "TRY",
    "UP",
    "W",
    "YTT",
]

[tool.ruff.lint.per-file-ignores]
"private/misc/*" = ["B018", "INP001"]
"typings/skia/*" = ["A002", "E743", "N8", "PLW0211", "PYI021", "PYI034"]
"typings/thefuzz/*" = ["N802"]

[tool.ruff.lint.isort]
combine-as-imports = true
detect-same-package = true
extra-standard-library = ["typing_extensions"]
split-on-trailing-comma = true

[tool.ruff.lint.flake8-type-checking]
quote-annotations = true
exempt-modules = [
    "types",
    "typing",
    "typing_extensions",
    "collections",
    "pathlib",
    "nonebot",
    "nonebot_plugin_alconna",
]

[tool.data.packages]
my_package = { path = "nonebot_plugin_afd" }
